apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "proxy-sgx.fullname" . }}-2
  labels:
{{ include "proxy-sgx.labels" . | indent 4 }}
    app.kubernetes.io/name: {{ include "proxy-sgx.name" . }}-2
    experiment: {{ .Values.experiment | default "test" }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "proxy-sgx.name" . }}-2
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "proxy-sgx.name" . }}-2
        app.kubernetes.io/instance: {{ .Release.Name }}
        tier: "pprox"
        experiment: {{ .Values.experiment | default "test" }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
      - name: wait-for-harness
        image: groundnuty/k8s-wait-for:0.1
        args: [ "pod", "-lapp.kubernetes.io/name=harness" ]
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: TARGET_HOST
              value: "{{ .Release.Name }}-harness"
            - name: TARGET_PORT
              value: "{{ .Values.targetPort }}"
            - name: TCP_PORT
              value: "{{ .Values.tcpPort }}"
            - name: PROXY_TYPE
              value: "{{ .Values.proxyType2 }}"
            - name: BUFFER_SHUFFLING
              value: "{{ .Values.bufferShuffling }}"
            - name: RESPONSE_TIMEOUT
              value: "{{ .Values.responseTimeout }}"
            - name: ENABLE_ENCRYPTION
              value: "{{ .Values.enableEncryption }}"
            - name: DEBUG
              value: "{{ .Values.debug }}"
            - name: ENABLE_ITEMS_DECR
              value: "{{ .Values.enableItemsDecryption }}"              
            - name: EPOLL_SIZE 
              value: "{{ .Values.epollSize }}"              
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                tier: pprox
            topologyKey: kubernetes.io/hostname
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
