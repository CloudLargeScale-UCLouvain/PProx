apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "injector.fullname" . }}-injector
  labels:
{{ include "injector.labels" . | indent 4 }}
    app.kubernetes.io/name: {{ include "injector.name" . }}-injector
    experiment: {{ .Values.experiment | default "test" }}
spec:
  backoffLimit: 0
  parallelism: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "injector.name" . }}-injector
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: "Never"
      initContainers:
{{- if .Values.harness }}
      - name: wait-for-train-job
        image: groundnuty/k8s-wait-for:0.1
        args: [ "job", "-lapp.kubernetes.io/name={{ include "injector.name" . }}-locust-train" ]
      - name: wait-a-bit
        image: busybox:1.28
        command: ['sh', '-c', 'echo "wait a bit" && sleep 60']
{{- end }}
      - name: check-train-ok
        image: "giantswarm/tiny-tools"
        command: ["sh", "-c", "/check-train-ok.sh"]
        volumeMounts:
        - name: config-volume
          mountPath: /check-train-ok.sh
          subPath: check-train-ok.sh
      - name: scale-harness
        image: "giantswarm/tiny-tools"
        command: ["sh", "-c", "/scale-harness.sh"]
        volumeMounts:
        - name: config-volume
          mountPath: /scale-harness.sh
          subPath: scale-harness.sh
      - name: load-dataset
        image: giantswarm/tiny-tools
        command: ["sh", "/download-test-dataset.sh"]
        volumeMounts:
        - name: dataset-volume
          mountPath: /dataset
        - name: config-volume
          mountPath: /download-test-dataset.sh
          subPath: download-test-dataset.sh
           
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: URL_BASE
              value: "{{ .Values.targetHost }}"
            - name: FLUENTD_HOST
              value: "manager-fluentd.manager"
            - name: XP_NAME
              value: "{{ .Values.name }}"
            - name: NB_REQUESTS
              value: "{{ .Values.clients }}"
            - name: DURATION
              value: "{{ .Values.duration }}"
            - name: ASYNC_FLUENTD
              value: "{{ .Values.asyncFluentd }}"
            - name: TIMEOUT_REQUEST
              value: "{{ .Values.timeoutRequest }}"
            - name: PERIOD_REQUEST
              value: "{{ .Values.periodRequest }}"
            - name: ENABLE_ENCRYPTION
              value: "{{ .Values.enableEncryption }}"
            - name: CONCURRENCY
              value: "{{ .Values.concurrency }}"
            - name: SEED
              value: "{{ .Values.seed }}"
            - name: CSV_BODY
              value: "{{ .Values.csvBody }}"
            - name: RANDOM_SHIFT
              value: "{{ .Values.randomShift }}"
          volumeMounts:
          - name: dataset-volume
            mountPath: /dataset
      volumes:
      - name: dataset-volume
        emptyDir: {}
      - name: config-volume
        configMap:
          name: locust-ur
          defaultMode: 0744
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
